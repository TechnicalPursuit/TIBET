//  ========================================================================
/**
 * @copyright Copyright (C) 1999 Technical Pursuit Inc. (TPI) All Rights
 *     Reserved. Patents Pending, Technical Pursuit Inc. Licensed under the
 *     OSI-approved Reciprocal Public License (RPL) Version 1.5. See the RPL
 *     for your rights and responsibilities. Contact TPI to purchase optional
 *     privacy waivers if you must keep your TIBET-based source code private.
 */
var bootSystemPort,channelPromiseCBs;self.addEventListener("install",function(a){a.waitUntil(self.skipWaiting())});self.addEventListener("activate",function(a){a.waitUntil(self.clients.claim())});self.addEventListener("message",function(a){if(a.data.command==="setup"){bootSystemPort=a.ports[0];self.receiveMessageFromPage(a.data).then(function(a){bootSystemPort.addEventListener("message",function(a){self.receiveMessageFromPage(a.data).then(function(b){if(!a.data.ack){bootSystemPort.postMessage({error:null,msg:"ok",payload:b,ack:true})}},function(b){if(!a.data.ack){bootSystemPort.postMessage({error:b,msg:"error",ack:true})}})});bootSystemPort.start();bootSystemPort.postMessage({error:null,msg:"ok",payload:a,ack:true})},function(a){bootSystemPort.postMessage({error:a,msg:"error",ack:true})})}});self.addEventListener("fetch",function(a){var b,c,d,e,f,g;b=a.request.url;c=b.slice(b.lastIndexOf("/")+1);if(/\.\w+$/.test(c)===false||/\?.+=.+/.test(c)===true){return}d=/urn:tibet:|urn::/;if(d.test(c)){e=caches.open("TIBET_PSEUDO_MODULE_CACHE").then(function(a){return a.match(c)}).then(function(a){if(a){return a.text()}return self.clients.matchAll().then(function(a){return self.sendMessageToPage(a[0],{command:"createModule",payload:c})}).then(function(a){return a.payload})}).then(function(a){var b;b=new Response(a,{headers:new Headers({"Content-Type":"text/javascript"})});return b});a.respondWith(e)}else{if(self.cfg&&self.cfg["boot.use_sw_cache"]===false){return}if(self.cfg&&self.cfg["debug.cache"]===true){g=true}if(!self.libResourcePath){self.libResourcePath=self.location.origin+"/TIBET-INF/tibet/";self.appResourcePath=self.location.origin+"/"}f=/tibet.*\.min.js$/.test(b);if(b.startsWith(self.libResourcePath)||f){e=caches.open("TIBET_LIB_CACHE").then(function(b){return b.match(a.request)}).then(function(c){if(!c){if(g){console.warn("CACHE MISS ON LIB RESOURCE: "+b)}return fetch(a.request).then(function(a){return a})}else{return c}});a.respondWith(e)}else if(b.startsWith(self.appResourcePath)){e=caches.open("TIBET_APP_CACHE").then(function(b){return b.match(a.request)}).then(function(c){if(!c){if(g){console.warn("CACHE MISS ON APP RESOURCE: "+b)}return fetch(a.request).then(function(a){return a})}else{return c}});a.respondWith(e)}else{console.log("LOADING RESOURCE FROM SERVER: "+b)}}});self.receiveMessageFromPage=function(a){var b,c;if(a.error){if(channelPromiseCBs){channelPromiseCBs[1](a.error)}TP.boot.$$channelPromiseCBs=null;return Promise.reject(a.error)}switch(a.command){case"setcfg":self.cfg=JSON.parse(a.payload);self.libResourcePath=self.cfg["boot.lib_resource_path"];self.appResourcePath=self.cfg["boot.app_resource_path"];break;case"setcfgprop":b=JSON.parse(a.payload);c=Object.keys(b)[0];self.cfg[c]=b[c];break;default:break;}if(channelPromiseCBs){channelPromiseCBs[0](a);channelPromiseCBs=null}return Promise.resolve()};self.sendMessageToPage=function(a,b){var c;c=new Promise(function(a,c){channelPromiseCBs=[a,c];bootSystemPort.postMessage(b)});return c};
