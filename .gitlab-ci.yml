cache:
  paths:
  - node_modules/
  - .yarn

variables:
  DOCKER_DRIVER: overlay
  CI_REGISTRY: registry.gitlab.com
  CI_REGISTRY_TEST_IMAGE: registry.gitlab.com/teamtibet/tibet:$CI_BUILD_REF_NAME
  CI_REGISTRY_RELEASE_IMAGE: registry.gitlab.com/teamtibet/tibet:latest

services:
  - docker:dind

stages:
  - build
  - test

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

build:
  image: docker:latest
  stage: build
  script:
    - docker build -f Dockerfile_CI -t $CI_REGISTRY_TEST_IMAGE .
    - docker push $CI_REGISTRY_TEST_IMAGE
  only:
    - develop

docker_test:
  stage: test
  script:
    - docker run $CI_REGISTRY_TEST_IMAGE

unit_test:
  image: node
  stage: test_old
  variables:
    NODE_ENV: test
  before_script:
    - apt-get update
    - apt-get install -yyq ca-certificates
    - apt-get install -yyq libappindicator1 libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6
    - apt-get install -yyq gconf-service lsb-release wget xdg-utils
    - apt-get install -yyq fonts-liberation

    - yarn config set cache-folder .yarn
    - yarn install
  script:
    - yarn link
    - tibet build
    - tibet test

