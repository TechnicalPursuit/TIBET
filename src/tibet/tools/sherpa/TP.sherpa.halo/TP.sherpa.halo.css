@namespace sherpa url("http://www.technicalpursuit.com/2014/sherpa");
@namespace pclass url("urn:tibet:pseudoclass");

sherpa|halo {

    display: block;
    position: absolute;

    /* Set an initial top, left width and height - the halo code will overwrite
     * this values dynamically as the halo is targeted. */
    --sherpa-halo-top: 200px;
    --sherpa-halo-left: 200px;
    --sherpa-halo-width: 100px;
    --sherpa-halo-height: 100px;

    --sherpa-halo-corner-size: 7px;
    --sherpa-halo-corner-offset: -7px;

    min-width: calc((var(--sherpa-halo-corner-size) * 3) + 3px);
    min-height: calc((var(--sherpa-halo-corner-size) * 3) + 2px);

    z-index: var(--tibet-CONSOLE-HALO-TIER);

    outline: dashed 1px #666;

    /* Turn off pointer events so that elements *under* the halo can receive
        events */
    pointer-events: none;

    box-shadow: 3px 3px 3px #aaa;
}

sherpa|halo:not([pclass|hidden]) {

    top: var(--sherpa-halo-top);
    left: var(--sherpa-halo-left);

    width: var(--sherpa-halo-width);
    height: var(--sherpa-halo-height);
}

/* In effect when the halo is focused on a target that is not a 'displayed'
 * element (note that this is *not* the same as 'non visible') */
sherpa|halo[nonDisplayedTarget="true"] {

    background-color: #fff2aa;
    background-image: url("data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000000' fill-opacity='0.62' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E");
}

sherpa|halo[nonDisplayedTarget="true"][descendantOf="head"] {

    left: calc(50% - (var(--sherpa-halo-width) / 2));
}

sherpa|halo[nonDisplayedTarget="true"][descendantOf="body"] {

    top: auto !important;
    bottom: var(--sherpa-halo-corner-size) !important;

    left: calc(50% - (var(--sherpa-halo-width) / 2));
}

sherpa|halo > div {

    position: absolute;

    width: 10px;
    height: 10px;
}

.haloCorner {

    border: solid 1px black;
    border-radius: 0.7em;

    background-color: gold;

    transition: opacity 0.25s ease-out;

    pointer-events: auto;
}

.haloCorner:hover {

    opacity: 1;
}

/* TP.NORTHWEST */
#haloCorner-Northwest {

    top: var(--sherpa-halo-corner-offset);
    left: var(--sherpa-halo-corner-offset);
}

/* TP.NORTH */
#haloCorner-North {

    top: var(--sherpa-halo-corner-offset);
    left: calc(50% - var(--sherpa-halo-corner-size));
}

/* TP.NORTHEAST */
#haloCorner-Northeast {

    top: var(--sherpa-halo-corner-offset);
    right: var(--sherpa-halo-corner-offset);
}

/* TP.WEST */
#haloCorner-West {

    left: var(--sherpa-halo-corner-offset);
    top: calc(50% - var(--sherpa-halo-corner-size) - 1px);
}

/* TP.EAST */
#haloCorner-East {

    right: var(--sherpa-halo-corner-offset);
    top: calc(50% - var(--sherpa-halo-corner-size) - 1px);
}

/* TP.SOUTHWEST */
#haloCorner-Southwest {

    bottom: var(--sherpa-halo-corner-offset);
    left: var(--sherpa-halo-corner-offset);
}

/* TP.SOUTH */
#haloCorner-South {

    left: calc(50% - var(--sherpa-halo-corner-size));
    bottom: var(--sherpa-halo-corner-offset);
}

/* TP.SOUTHEAST */
#haloCorner-Southeast {

    bottom: var(--sherpa-halo-corner-offset);
    right: var(--sherpa-halo-corner-offset);
}

/* Halo breadcrumb */
sherpa|halo > sherpa|breadcrumb {

    top: -18px;

    /* Turn pointer events back on for the breadcrumb */
    pointer-events: auto;
}

div[busyFor="SherpaHalo"] {

    z-index: var(--tibet-HUD-TIER);
}

