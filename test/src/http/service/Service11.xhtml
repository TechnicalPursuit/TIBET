<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml"
        xmlns:http="http://www.technicalpursuit.com/2020/http">

<head>

    <title></title>

    <script src="~lib_build/tibet_hook.min.js"></script>

    <link type="text/css" rel="stylesheet" href="~lib_styles/tibet.css"/>

    <tibet:data name="urn:tibet:Service11_Body1">
        <![CDATA[
        {"foo": "bar", "baz":"goo"}
        ]]>
    </tibet:data>

    <tibet:data name="urn:tibet:Service11_Body2">
        <![CDATA[
        {"goo": "tar", "faz":"roo"}
        ]]>
    </tibet:data>

    <http:service id="Service11" href="/TIBET_endpoints/HTTP_MULTIPART_FORM_POST_TEST" method="POST" body="urn:tibet:Service11_Body1 urn:tibet:Service11_Body2" name="urn:tibet:Service11_Result" multipart="form-data" mimetype="text/plain text/plain"/>

</head>

<body>

    <h2>Service Test #11</h2><br/>

    <br/>
    <br/>
    This test sets up a &lt;http:service&gt; tag that services data at a particular URI. It shows how to perform a standard HTTP &lt;form&gt; multipart form POST using no parameter, but having 2 bodies (defined using &lt;tibet:data&lt; tags in the head). It doesn't have a data type assigned, but will try to use a dynamically computed content type to hold the result data based on the data returned.
    <br/>
    A variety of signals are thrown by the various objects involved.
    <br/>

</body>
</html>
