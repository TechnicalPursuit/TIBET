<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml"
        xmlns:tibet="http://www.technicalpursuit.com/1999/tibet">

<head>

    <title></title>

    <script src="~lib_build/tibet_hook.min.js"></script>

    <link type="text/css" rel="stylesheet" href="~lib_styles/tibet.css"/>

    <tibet:data name="urn:tibet:test_people">
        <people xmlns="">
            <person>
                <lastname>Smith</lastname>
                <firstname>Joe</firstname>
                <male>true</male>
            </person>
            <person>
                <lastname>Jones</lastname>
                <firstname>John</firstname>
                <male>true</male>
            </person>
            <person>
                <lastname>Homemaker</lastname>
                <firstname>Billy</firstname>
                <male>true</male>
            </person>
            <person>
                <lastname>Professional</lastname>
                <firstname>Pamela</firstname>
                <male>false</male>
            </person>
        </people>
    </tibet:data>

</head>

<body xmlns:bind="http://www.technicalpursuit.com/2005/binding">

    <h2>Bind Partial Attribute XML - Multi-level Fragment</h2><br/>
    <br/>
    <br/>
    This test sets up a 'simple binding' between attributes on a custom element that is using an 'embedded expression' (which is whole attribute expression) and a piece of JSON data, set up by the &lt;tibet:data&gt; tag embedded in this document. This is being bound to attributes on the custom element that have different behaviors - the 'lastname' attribute allows any value to be set and is always present, whereas the 'ismale' attribute is an 'existence' attribute that will be removed if set to a 'falsey' value.
    <br/>
    <br/>
    <br/>
    This test also uses a top-level binding scope of a 'pure URI' with a nested scope that contains a further qualifying fragment to avoid having to repeat the full qualifications for the bind scope on each bind.
    <br/>
    <br/>

    <!-- Set up a span to define the first part of the binding scope -->
    <span bind:scope="urn:tibet:test_people">

        <!-- Set up a span to define the second part of the binding scope -->
        <span bind:scope="#xpath1(/people/person[4])">

        <label>Pamela: </label>
        <test:person id="person1" bind:in="{@lastname: [[lastname]], @ismale: [[male]]}"/><br/>

        </span>
    </span>

    <!-- Set up a span to define the first part of the binding scope -->
    <span bind:scope="urn:tibet:test_people">

        <!-- Set up a span to define the second part of the binding scope -->
        <span bind:scope="#xpath1(/)">

        <label>Joe: </label>
        <test:person id="person2" bind:in="{@lastname: [[people/person[1]/lastname]], @ismale: [[/person[1]/male]]}"/><br/>

        </span>
    </span>

</body>
</html>
