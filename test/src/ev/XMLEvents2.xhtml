<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">

<head>

    <title></title>

    <script src="~lib_build/tibet_hook.min.js"></script>

    <link type="text/css" rel="stylesheet" href="~lib_styles/tibet.css"/>

</head>

<body xmlns:ev="http://www.w3.org/2001/xml-events">

    <h2>XML Events Test #2</h2><br/>
    <br/>
    <br/>
    This test sets up two XMLEvents &lt;ev:script&gt; elements that listen for the 'TP.sig.DOMContentLoaded' signal, one coming from the document and another coming from an element.<br/>
    <br/>
    <br/>
    The &lt;ev:script&gt; element has an 'event' value of 'TP.sig.DOMContentLoaded' (the TIBET equivalent of 'onload') and an 'observer' containing the special identifier '#document', which is TIBET's equivalent of a URI fragment pointing to the document itself.<br/>

    <ev:script type="text/javascript" event="TP.sig.DOMContentLoaded" observer="#document">
        <![CDATA[
        TP.byId('testResults').setAttribute('documentcontentloadedfired', 'true');
        ]]>
    </ev:script>

    The div below will change content when the button is pressed. This will then signal a 'TP.sig.DOMContentLoaded' signal with the 'id' of the div as the 'observer' of the signal.
    <div id="testDiv">
    Click the button below to replace me.
    </div>

    <button id="updateElement" onclick="TP.setContent('testDiv', 'Current date: ' + new Date())">Click me to update the content.</button>

    <br/>

    The &lt;ev:script&gt; element has an 'event' value of 'TP.sig.DOMContentLoaded' (the TIBET equivalent of 'onload') and an 'observer' containing the identifier 'testDiv', which points it to the element we're observing for content change.<br/>
    <ev:script type="text/javascript" event="TP.sig.DOMContentLoaded" observer="testDiv">
        <![CDATA[
        TP.byId('testResults').setAttribute('elementcontentloadedfired', 'true');
        ]]>
    </ev:script>

    <!-- The test result data goes here -->
    <span id="testResults"/>

</body>
</html>
