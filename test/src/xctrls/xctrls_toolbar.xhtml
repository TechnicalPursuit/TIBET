<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title></title>

    <script src="../../../lib/src/tibet_hook.min.js"></script>

    <link type="text/css" rel="stylesheet" href="~lib_styles/tibet.css"/>

    <link type="text/css" rel="stylesheet" href="~lib_test/src/xctrls/xctrls_gallery.css"/>

    <!-- As a single item Array, the item labels and values will be the same -->
    <tibet:data name="urn:tibet:single_item_array" content="TP.core.Hash">
        <![CDATA[
            {
            "names": [
                "Smith",
                "Johnson",
                "Williams",
                "Jones",
                "Brown",
                "Davis",
                "Miller",
                "Wilson",
                "Moore",
                "Taylor"]
            }
        ]]>
    </tibet:data>

    <!-- As a pair item Array, the item values will come from the values in the first 'column' and item labels will come from the values in the second 'column' -->
    <tibet:data name="urn:tibet:pair_item_array" content="TP.core.Hash">
        <![CDATA[
            {
            "names": [
                ["smith","Smith"],
                ["johnson","Johnson"],
                ["williams","Williams"],
                ["jones","Jones"],
                ["brown","Brown"],
                ["davis","Davis"],
                ["miller","Miller"],
                ["wilson","Wilson"],
                ["moore","Moore"],
                ["taylor","Taylor"]
                ]
            }
        ]]>
    </tibet:data>

    <!-- In this particular multi-item Array, the item values will come from the values in the third 'column' and item labels will come from the values in the first 'column'. These will be mapped using the itemValue and itemLabel attributes on the tabbar. -->
    <tibet:data name="urn:tibet:multi_item_array" content="TP.core.Hash">
        <![CDATA[
            {
            "names": [
                ["Smith","Mr.","smith"],
                ["Johnson","Sir","johnson"],
                ["Williams","Hon.","williams"],
                ["Jones","Mr.","jones"],
                ["Brown","Ms.","brown"],
                ["Davis","Mr.","davis"],
                ["Miller","Mrs","miller"],
                ["Wilson","Mr.","wilson"],
                ["Moore","Mrs","moore"],
                ["Taylor","Mr.","taylor"]
                ]
            }
        ]]>
    </tibet:data>

    <!-- As a JS 'object' hash, the item values will come from the 'keys' in the hash and item labels will come from the values 'hash' -->
    <tibet:data name="urn:tibet:object_hash" content="TP.core.Hash">
        <![CDATA[
            {
            "info": [{
                "last_name":"Smith",
                "first_name":"Joe",
                "age":"42",
                "gender":"male"
                }]
            }
        ]]>
    </tibet:data>

    <!-- In this particular array of JS 'object' hashes, the item values will come from the 'keys' in the hash and item labels will come from the values 'hash'. -->
    <tibet:data name="urn:tibet:object_hash_array" content="TP.core.Hash">
        <![CDATA[
            {
            "info": [{
                "last_name":"Smith",
                "first_name":"Joe",
                "age":"42",
                "gender":"male"
                },{
                "last_name":"Brown",
                "first_name":"Suzy",
                "age":"51",
                "gender":"female"
                }]
            }
        ]]>
    </tibet:data>

    <!-- The selection scratch data -->
    <tibet:data name="urn:tibet:selection_scratch_data" content="TP.core.Hash">
        <![CDATA[
            {
            "data": "johnson"
            }
        ]]>
    </tibet:data>

    <!-- The test data for selection tests -->
    <tibet:data name="urn:tibet:selection_test_data" content="TP.core.Hash">
        <![CDATA[
            {
            "data": [
                ["foo","foo"],
                ["bar","bar"],
                ["baz","baz"]
                ]
            }
        ]]>
    </tibet:data>

    <!-- The test data for value bound selection tests -->
    <tibet:data name="urn:tibet:bound_selection_test_data" content="TP.core.Hash">
        <![CDATA[
        {"selection_set_1": "bar", "selection_set_2": "foo"}
        ]]>
    </tibet:data>

    <!-- The test data for static item selection tests -->
    <tibet:data name="urn:tibet:static_selection_test_data" content="TP.core.Hash">
        <![CDATA[
        {"selection_set_1": "before"}
        ]]>
    </tibet:data>

</head>

<body data-theme="tpi">
    <br/>

    <br/>
    toolbar #1:
    <br/>
    A standard XControls toolbar showing dynamic content of a single item Array:
    <xctrls:toolbar id="toolbar1" bind:in="{data: urn:tibet:single_item_array#tibet(names)}" itemLabel="0"/>

    <br/>
    <br/>

    <br/>
    toolbar #2:
    <br/>
    A standard XControls toolbar showing dynamic content of a pair item Array:
    <xctrls:toolbar id="toolbar2" bind:io="{data: urn:tibet:pair_item_array#tibet(names), value: urn:tibet:selection_scratch_data#tibet(data)}"/>

    <br/>
    <br/>

    <br/>
    toolbar #3:
    <br/>
    A standard XControls toolbar showing dynamic content of a multi-item Array:
    <xctrls:toolbar id="toolbar3" bind:io="{data: urn:tibet:multi_item_array#tibet(names), value: urn:tibet:selection_scratch_data#tibet(data)}" itemLabel="0" itemValue="2"/>

    <br/>
    <br/>

    <br/>
    toolbar #4:
    <br/>
    A standard XControls toolbar showing dynamic content of an Object hash:
    <xctrls:toolbar id="toolbar4" bind:in="{data: urn:tibet:object_hash#tibet(info)}" itemKey="last_name" itemLabel="last_name"/>

    <br/>
    <br/>

    <br/>
    toolbar #5:
    <br/>
    A standard XControls toolbar showing dynamic content of an Array of Object hashes:
    <xctrls:toolbar id="toolbar5" bind:in="{data: urn:tibet:object_hash_array#tibet(info)}" itemKey="last_name" itemLabel="last_name"/>

    <br/>
    <br/>

    <br/>
    toolbar #6:
    <br/>

    A standard XControls toolbar enabled showing dynamic content:
    <xctrls:toolbar id="toolbar6" bind:io="{data: urn:tibet:selection_test_data#tibet(data)}"/>

    <br/>
    <br/>

    <br/>
    toolbar #7:
    <br/>

    A standard XControls toolbar enabled showing dynamic content and value bound to a selection model:
    <xctrls:toolbar id="toolbar7" bind:in="{data: urn:tibet:selection_test_data#tibet(data)}" bind:io="{value: urn:tibet:bound_selection_test_data#tibet(selection_set_1)}"/>

    <br/>
    <br/>

    <br/>
    toolbar #8:
    <br/>

    A standard XControls toolbar enabled showing only static content and value bound to a selection model:
    <xctrls:toolbar id="toolbar8" bind:io="{value: urn:tibet:static_selection_test_data#tibet(selection_set_1)}">
        <xctrls:textitem tabindex="0">
            <xctrls:label>Before Content</xctrls:label>
            <xctrls:value>before</xctrls:value>
        </xctrls:textitem>
        <xctrls:textitem tabindex="0" on:click="TestClick">
            <xctrls:label>After Content</xctrls:label>
            <xctrls:value>after</xctrls:value>
        </xctrls:textitem>
    </xctrls:toolbar>

    <br/>
    <br/>

    <br/>
    toolbar #9:
    <br/>

    A standard XControls toolbar enabled showing static and templated content and value bound to a selection model:
    <xctrls:toolbar id="toolbar9" bind:in="{data: urn:tibet:selection_test_data#tibet(data)}" bind:io="{value: urn:tibet:bound_selection_test_data#tibet(selection_set_2)}">
        <xctrls:textitem tabindex="0">
            <xctrls:label>Before Content</xctrls:label>
            <xctrls:value>before</xctrls:value>
        </xctrls:textitem>
        <tibet:template>
            <xctrls:textitem bind:in="{@foo: 'Value was: [[value.0 .% upperCase]]'}">
                <xctrls:label>[[value.1 .% upperCase]]</xctrls:label>
                <xctrls:value>[[value.0]]</xctrls:value>
            </xctrls:textitem>
        </tibet:template>
        <xctrls:textitem tabindex="0">
            <xctrls:label>After Content</xctrls:label>
            <xctrls:value>after</xctrls:value>
        </xctrls:textitem>
    </xctrls:toolbar>

    <br/>
    <br/>

    <div class="controlBox">
        <button onclick="TP.byId('toolbar1').signal('UIDisabled');">Disable toolbar #1</button>
        <button onclick="TP.byId('toolbar1').signal('UIEnabled');">Enable toolbar #1</button>

        <br/>

        <!-- NB: We put this in a timeout - otherwise, the button never blurs -->
        <button onclick="setTimeout(function() {TP.byId('toolbar1').signal('UIFocused');}, 100)">Focus toolbar #1</button>
    </div>

</body>
</html>
